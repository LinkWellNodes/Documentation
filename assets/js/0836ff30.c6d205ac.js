"use strict";(self.webpackChunklinkwell_nodes_documentation=self.webpackChunklinkwell_nodes_documentation||[]).push([[5401],{8416:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var i=t(3460),a=t(4848),l=t(8453);t(1096);const r={title:"Chainlink Direct Request Architectures Explained",description:"Exploring Chainlink's Basic Request Model Architectures: Designing Chainlink oracle networks for reliable real-world data feeds.",date:"2024-02-17",keywords:["chainlink","smart contracts","decentralized oracles","web3","blockchain","node operator"],authors:["Ken"],tags:["chainlink","smart contracts","decentralized oracles","web3","blockchain","node operator"]},s=void 0,o={authorsImageUrls:[void 0]},c=[];function d(e){const n={img:"img",p:"p",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h2",{class:"lw-subtitle",children:"An in-depth guide into Chainlink's Basic Request (Direct Request) model, and its various deployment architectures"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Chainlink Basic Request Model Architecture Header",src:t(3529).A+"",title:"Chainlink Basic Request Model Architectures",width:"800",height:"600"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1096:(e,n,t)=>{t.d(n,{A:()=>r});t(6540);var i=t(1021);const a={tableOfContentsInline:"tableOfContentsInline_prmo"};var l=t(4848);function r(e){let{toc:n,minHeadingLevel:t,maxHeadingLevel:r}=e;return(0,l.jsx)("div",{className:a.tableOfContentsInline,children:(0,l.jsx)(i.A,{toc:n,minHeadingLevel:t,maxHeadingLevel:r,className:"table-of-contents",linkClassName:null})})}},1021:(e,n,t)=>{t.d(n,{A:()=>f});var i=t(6540),a=t(3115);function l(e){const n=e.map((e=>({...e,parentIndex:-1,children:[]}))),t=Array(7).fill(-1);n.forEach(((e,n)=>{const i=t.slice(2,e.level);e.parentIndex=Math.max(...i),t[e.level]=n}));const i=[];return n.forEach((e=>{const{parentIndex:t,...a}=e;t>=0?n[t].children.push(a):i.push(a)})),i}function r(e){let{toc:n,minHeadingLevel:t,maxHeadingLevel:i}=e;return n.flatMap((e=>{const n=r({toc:e.children,minHeadingLevel:t,maxHeadingLevel:i});return function(e){return e.level>=t&&e.level<=i}(e)?[{...e,children:n}]:n}))}function s(e){const n=e.getBoundingClientRect();return n.top===n.bottom?s(e.parentNode):n}function o(e,n){let{anchorTopOffset:t}=n;const i=e.find((e=>s(e).top>=t));if(i){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(s(i))?i:e[e.indexOf(i)-1]??null}return e[e.length-1]??null}function c(){const e=(0,i.useRef)(0),{navbar:{hideOnScroll:n}}=(0,a.p)();return(0,i.useEffect)((()=>{e.current=n?0:document.querySelector(".navbar").clientHeight}),[n]),e}function d(e){const n=(0,i.useRef)(void 0),t=c();(0,i.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:i,linkActiveClassName:a,minHeadingLevel:l,maxHeadingLevel:r}=e;function s(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(i),s=function(e){let{minHeadingLevel:n,maxHeadingLevel:t}=e;const i=[];for(let a=n;a<=t;a+=1)i.push(`h${a}.anchor`);return Array.from(document.querySelectorAll(i.join()))}({minHeadingLevel:l,maxHeadingLevel:r}),c=o(s,{anchorTopOffset:t.current}),d=e.find((e=>c&&c.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,t){t?(n.current&&n.current!==e&&n.current.classList.remove(a),e.classList.add(a),n.current=e):e.classList.remove(a)}(e,e===d)}))}return document.addEventListener("scroll",s),document.addEventListener("resize",s),s(),()=>{document.removeEventListener("scroll",s),document.removeEventListener("resize",s)}}),[e,t])}var u=t(6289),m=t(4848);function h(e){let{toc:n,className:t,linkClassName:i,isChild:a}=e;return n.length?(0,m.jsx)("ul",{className:a?void 0:t,children:n.map((e=>(0,m.jsxs)("li",{children:[(0,m.jsx)(u.A,{to:`#${e.id}`,className:i??void 0,dangerouslySetInnerHTML:{__html:e.value}}),(0,m.jsx)(h,{isChild:!0,toc:e.children,className:t,linkClassName:i})]},e.id)))}):null}const g=i.memo(h);function f(e){let{toc:n,className:t="table-of-contents table-of-contents__left-border",linkClassName:s="table-of-contents__link",linkActiveClassName:o,minHeadingLevel:c,maxHeadingLevel:u,...h}=e;const f=(0,a.p)(),p=c??f.tableOfContents.minHeadingLevel,k=u??f.tableOfContents.maxHeadingLevel,v=function(e){let{toc:n,minHeadingLevel:t,maxHeadingLevel:a}=e;return(0,i.useMemo)((()=>r({toc:l(n),minHeadingLevel:t,maxHeadingLevel:a})),[n,t,a])}({toc:n,minHeadingLevel:p,maxHeadingLevel:k});return d((0,i.useMemo)((()=>{if(s&&o)return{linkClassName:s,linkActiveClassName:o,minHeadingLevel:p,maxHeadingLevel:k}}),[s,o,p,k])),(0,m.jsx)(g,{toc:v,className:t,linkClassName:s,...h})}},3529:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/Header-404a62e15694ef8a0fbec7c4c3d7ce5f.webp"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var i=t(6540);const a={},l=i.createContext(a);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(l.Provider,{value:n},e.children)}},3460:e=>{e.exports=JSON.parse('{"permalink":"/blog/Chainlink-Basic-Request-Model-Architectures","source":"@site/blog/Chainlink-Basic-Request-Model-Architectures/index.md","title":"Chainlink Direct Request Architectures Explained","description":"Exploring Chainlink\'s Basic Request Model Architectures: Designing Chainlink oracle networks for reliable real-world data feeds.","date":"2024-02-17T00:00:00.000Z","tags":[{"inline":true,"label":"chainlink","permalink":"/blog/tags/chainlink"},{"inline":true,"label":"smart contracts","permalink":"/blog/tags/smart-contracts"},{"inline":true,"label":"decentralized oracles","permalink":"/blog/tags/decentralized-oracles"},{"inline":true,"label":"web3","permalink":"/blog/tags/web-3"},{"inline":true,"label":"blockchain","permalink":"/blog/tags/blockchain"},{"inline":true,"label":"node operator","permalink":"/blog/tags/node-operator"}],"readingTime":12.02,"hasTruncateMarker":true,"authors":[{"name":"Ken Reiners","title":"Co-Founder - LinkWell Nodes","url":"https://www.linkedin.com/in/ken-reiners-755806167/","imageURL":"/img/ken-reiners-100x100.webp","key":"Ken","page":null}],"frontMatter":{"title":"Chainlink Direct Request Architectures Explained","description":"Exploring Chainlink\'s Basic Request Model Architectures: Designing Chainlink oracle networks for reliable real-world data feeds.","date":"2024-02-17","keywords":["chainlink","smart contracts","decentralized oracles","web3","blockchain","node operator"],"authors":["Ken"],"tags":["chainlink","smart contracts","decentralized oracles","web3","blockchain","node operator"]},"unlisted":false,"prevItem":{"title":"Chainlink Price Feeds: Building a Custom Flux Monitor DON","permalink":"/blog/Build-A-Chainlink-Price-Feed-With-Flux-Aggregator"},"nextItem":{"title":"Requesting a Custom Any API Chainlink Data Feed: A 7 Step Guide For Web3 Developers","permalink":"/blog/Requesting-A-Custom-Chainlink-Data-Feed-Using-Any-API"}}')}}]);