"use strict";(self.webpackChunklinkwell_nodes_documentation=self.webpackChunklinkwell_nodes_documentation||[]).push([[492],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=u(r),p=a,b=s["".concat(c,".").concat(p)]||s[p]||g[p]||i;return r?n.createElement(b,o(o({ref:t},d),{},{components:r})):n.createElement(b,o({ref:t},d))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2785:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const i={title:"Chainlink Price Feeds: Connect your Web3 App to a Custom Flux Monitor DON",description:"How to build and integrate a custom Chainlink oracle price feed using FluxAggregator for aggregating real-world data on-chain for your Web3 application.",date:"2024-03-16",image:"https://docs.linkwellnodes.io/img/flux-agg-article/Flux_Aggregator_Architecture_Diagram.png",keywords:["chainlink oracle","smart contracts","price feed","web3","blockchain","decentralized"],authors:["Ken"],tags:["chainlink oracle","smart contracts","price feed","web3","blockchain","decentralized"]},o=void 0,l={permalink:"/blog/Build-A-Chainlink-Price-Feed-With-Flux-Aggregator",source:"@site/blog/Build-A-Chainlink-Price-Feed-With-Flux-Aggregator/index.md",title:"Chainlink Price Feeds: Connect your Web3 App to a Custom Flux Monitor DON",description:"How to build and integrate a custom Chainlink oracle price feed using FluxAggregator for aggregating real-world data on-chain for your Web3 application.",date:"2024-03-16T00:00:00.000Z",formattedDate:"March 16, 2024",tags:[{label:"chainlink oracle",permalink:"/blog/tags/chainlink-oracle"},{label:"smart contracts",permalink:"/blog/tags/smart-contracts"},{label:"price feed",permalink:"/blog/tags/price-feed"},{label:"web3",permalink:"/blog/tags/web-3"},{label:"blockchain",permalink:"/blog/tags/blockchain"},{label:"decentralized",permalink:"/blog/tags/decentralized"}],readingTime:14.595,hasTruncateMarker:!0,authors:[{name:"Ken Reiners",title:"Co-Founder LinkWell Nodes",url:"https://www.linkedin.com/in/ken-reiners-755806167/",imageURL:"/img/ken-reiners-100x100.webp",key:"Ken"}],frontMatter:{title:"Chainlink Price Feeds: Connect your Web3 App to a Custom Flux Monitor DON",description:"How to build and integrate a custom Chainlink oracle price feed using FluxAggregator for aggregating real-world data on-chain for your Web3 application.",date:"2024-03-16",image:"https://docs.linkwellnodes.io/img/flux-agg-article/Flux_Aggregator_Architecture_Diagram.png",keywords:["chainlink oracle","smart contracts","price feed","web3","blockchain","decentralized"],authors:["Ken"],tags:["chainlink oracle","smart contracts","price feed","web3","blockchain","decentralized"]},prevItem:{title:"How to Find a Chainlink Oracle: A Guide for Web3 Developers",permalink:"/blog/How-To-Find-A-Chainlink-Oracle"},nextItem:{title:"Chainlink Any API: Building a Custom Oracle Network",permalink:"/blog/Chainlink-Basic-Request-Model-Architectures"}},c={authorsImageUrls:[void 0]},u=[{value:"A how-to guide for building a custom Chainlink oracle price feed that can be integrated into your Web3 application.",id:"a-how-to-guide-for-building-a-custom-chainlink-oracle-price-feed-that-can-be-integrated-into-your-web3-application",level:2}],d={toc:u},s="wrapper";function g(e){let{components:t,...i}=e;return(0,a.kt)(s,(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"a-how-to-guide-for-building-a-custom-chainlink-oracle-price-feed-that-can-be-integrated-into-your-web3-application"},"A how-to guide for building a custom Chainlink oracle price feed that can be integrated into your Web3 application."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Chainlink Blog- How Price Feeds Secure DeFi",src:r(1733).Z,title:"Chainlink Blog- How Price Feeds Secure DeFi",width:"2048",height:"791"})))}g.isMDXComponent=!0},1733:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Header-57a164fd9fbd6912c37809360315531e.webp"}}]);