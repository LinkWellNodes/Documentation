"use strict";(self.webpackChunklinkwell_nodes_documentation=self.webpackChunklinkwell_nodes_documentation||[]).push([[2639],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=u(t),p=r,f=c["".concat(s,".").concat(p)]||c[p]||d[p]||i;return t?a.createElement(f,l(l({ref:n},m),{},{components:t})):a.createElement(f,l({ref:n},m))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=p;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3901:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(7294),r=t(3743);const i={tableOfContentsInline:"tableOfContentsInline_prmo"};function l(e){let{toc:n,minHeadingLevel:t,maxHeadingLevel:l}=e;return a.createElement("div",{className:i.tableOfContentsInline},a.createElement(r.Z,{toc:n,minHeadingLevel:t,maxHeadingLevel:l,className:"table-of-contents",linkClassName:null}))}},3743:(e,n,t)=>{t.d(n,{Z:()=>f});var a=t(7462),r=t(7294),i=t(6668);function l(e){const n=e.map((e=>({...e,parentIndex:-1,children:[]}))),t=Array(7).fill(-1);n.forEach(((e,n)=>{const a=t.slice(2,e.level);e.parentIndex=Math.max(...a),t[e.level]=n}));const a=[];return n.forEach((e=>{const{parentIndex:t,...r}=e;t>=0?n[t].children.push(r):a.push(r)})),a}function o(e){let{toc:n,minHeadingLevel:t,maxHeadingLevel:a}=e;return n.flatMap((e=>{const n=o({toc:e.children,minHeadingLevel:t,maxHeadingLevel:a});return function(e){return e.level>=t&&e.level<=a}(e)?[{...e,children:n}]:n}))}function s(e){const n=e.getBoundingClientRect();return n.top===n.bottom?s(e.parentNode):n}function u(e,n){let{anchorTopOffset:t}=n;const a=e.find((e=>s(e).top>=t));if(a){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(s(a))?a:e[e.indexOf(a)-1]??null}return e[e.length-1]??null}function m(){const e=(0,r.useRef)(0),{navbar:{hideOnScroll:n}}=(0,i.L)();return(0,r.useEffect)((()=>{e.current=n?0:document.querySelector(".navbar").clientHeight}),[n]),e}function c(e){const n=(0,r.useRef)(void 0),t=m();(0,r.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:a,linkActiveClassName:r,minHeadingLevel:i,maxHeadingLevel:l}=e;function o(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(a),o=function(e){let{minHeadingLevel:n,maxHeadingLevel:t}=e;const a=[];for(let r=n;r<=t;r+=1)a.push(`h${r}.anchor`);return Array.from(document.querySelectorAll(a.join()))}({minHeadingLevel:i,maxHeadingLevel:l}),s=u(o,{anchorTopOffset:t.current}),m=e.find((e=>s&&s.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,t){t?(n.current&&n.current!==e&&n.current.classList.remove(r),e.classList.add(r),n.current=e):e.classList.remove(r)}(e,e===m)}))}return document.addEventListener("scroll",o),document.addEventListener("resize",o),o(),()=>{document.removeEventListener("scroll",o),document.removeEventListener("resize",o)}}),[e,t])}function d(e){let{toc:n,className:t,linkClassName:a,isChild:i}=e;return n.length?r.createElement("ul",{className:i?void 0:t},n.map((e=>r.createElement("li",{key:e.id},r.createElement("a",{href:`#${e.id}`,className:a??void 0,dangerouslySetInnerHTML:{__html:e.value}}),r.createElement(d,{isChild:!0,toc:e.children,className:t,linkClassName:a}))))):null}const p=r.memo(d);function f(e){let{toc:n,className:t="table-of-contents table-of-contents__left-border",linkClassName:s="table-of-contents__link",linkActiveClassName:u,minHeadingLevel:m,maxHeadingLevel:d,...f}=e;const h=(0,i.L)(),k=m??h.tableOfContents.minHeadingLevel,N=d??h.tableOfContents.maxHeadingLevel,g=function(e){let{toc:n,minHeadingLevel:t,maxHeadingLevel:a}=e;return(0,r.useMemo)((()=>o({toc:l(n),minHeadingLevel:t,maxHeadingLevel:a})),[n,t,a])}({toc:n,minHeadingLevel:k,maxHeadingLevel:N});return c((0,r.useMemo)((()=>{if(s&&u)return{linkClassName:s,linkActiveClassName:u,minHeadingLevel:k,maxHeadingLevel:N}}),[s,u,k,N])),r.createElement(p,(0,a.Z)({toc:g,className:t,linkClassName:s},f))}},4911:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>m});var a=t(7462),r=(t(7294),t(3905)),i=t(3901);const l={title:"Verifiable Random Numbers (VRN)",description:"A guide to using LinkWell Nodes' Verifiable Random Numbers (VRN) service - a cryptographically secure and verifiable random number generation solution, similar to Chainlink's VRF."},o=void 0,s={unversionedId:"knowledgebase/Verifiable-Random-Numbers-Guide",id:"knowledgebase/Verifiable-Random-Numbers-Guide",title:"Verifiable Random Numbers (VRN)",description:"A guide to using LinkWell Nodes' Verifiable Random Numbers (VRN) service - a cryptographically secure and verifiable random number generation solution, similar to Chainlink's VRF.",source:"@site/docs/knowledgebase/Verifiable-Random-Numbers-Guide.md",sourceDirName:"knowledgebase",slug:"/knowledgebase/Verifiable-Random-Numbers-Guide",permalink:"/knowledgebase/Verifiable-Random-Numbers-Guide",draft:!1,tags:[],version:"current",frontMatter:{title:"Verifiable Random Numbers (VRN)",description:"A guide to using LinkWell Nodes' Verifiable Random Numbers (VRN) service - a cryptographically secure and verifiable random number generation solution, similar to Chainlink's VRF."},sidebar:"docsSidebar",previous:{title:"Chainlink Direct Requests (Any API)",permalink:"/knowledgebase/Direct-Request-Guide"},next:{title:"Frequently Asked Questions",permalink:"/knowledgebase/FAQ"}},u={},m=[{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:2},{value:"Key concepts",id:"key-concepts",level:2},{value:"Implementation guide",id:"implementation-guide",level:2},{value:"<strong>Step 1</strong>: Deploy your VRN consumer contract",id:"step-1-deploy-your-vrn-consumer-contract",level:3},{value:"<strong>Step 2</strong>: Request a random number",id:"step-2-request-a-random-number",level:3},{value:"<strong>Step 3</strong>: Verify the random number(s)",id:"step-3-verify-the-random-numbers",level:3},{value:"Option 1 (off-chain): Using our website",id:"option-1-off-chain-using-our-website",level:4},{value:"Option 2 (on-chain): Using an oracle request",id:"option-2-on-chain-using-an-oracle-request",level:4},{value:"Security",id:"security",level:2},{value:"Need more help?",id:"need-more-help",level:2}],c={toc:m},d="wrapper";function p(e){let{components:n,...l}=e;return(0,r.kt)(d,(0,a.Z)({},c,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{class:"lw-subtitle"},"A guide to generating ",(0,r.kt)("lw-emphasis",null,"Verifiable Random Numbers (VRNs)")," in your smart contract using LinkWell Nodes's cryptographically secure and verifiable random number generation (RNG) service."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Custom Chainlink data feeds by LinkWell Nodes",src:t(2821).Z,title:"Verifiable Random Numbers (VRN / VRF / RNG) by LinkWell Nodes",width:"1792",height:"1024"})),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"On this page"),":"),(0,r.kt)(i.Z,{toc:m.filter((e=>e.level>=2)),minHeadingLevel:1,maxHeadingLevel:3,mdxType:"TOCInline"}),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"LinkWell Nodes's ",(0,r.kt)("strong",{parentName:"p"},"Verifiable Random Numbers (VRN)")," service is a cryptographically-secure random number generator (RNG) that sends random numbers to your on-chain smart contract. "),(0,r.kt)("p",null,"Unlike traditional random number generators, VRN allows you to independently verify that the numbers provided were generated fairly, using a pre-committed secret seed."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("h3",{parentName:"admonition",id:"is-linkwells-vrn-the-same-as-chainlinks-vrf"},"Is LinkWell's VRN the same as Chainlink's VRF?"),(0,r.kt)("p",{parentName:"admonition"},"No. VRN is a different service that provides a similar level of security and verifiability, but added ease of implementation, free testnet usage, and minimal-cost mainnet usage.")),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cryptographically Secure"),": Seeds are generated randomly using a secure cryptographic hashing algorithm"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Verifiable"),": All random numbers can be independently verified using the seed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Tamper-Proof"),": Seeds are revealed only after a delay, preventing manipulation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Range-Bound"),": Request random numbers within any specified range"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Gas Efficient"),": Computation happens off-chain, minimizing gas costs")),(0,r.kt)("h2",{id:"key-concepts"},"Key concepts"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Seed Generation")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Our infrastructure generates a new cryptographically-secure random seed every ",(0,r.kt)("strong",{parentName:"li"},"6 hours")," (also known as an '",(0,r.kt)("strong",{parentName:"li"},"epoch"),"')"),(0,r.kt)("li",{parentName:"ul"},"Each seed is hashed and stored securely on our SOC-2 compliant infrastructure"),(0,r.kt)("li",{parentName:"ul"},"Seeds only become publicly available once their respective epoch has ended, to prevent manipulation"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Random Number Request")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Your smart contract's ",(0,r.kt)("inlineCode",{parentName:"li"},"request()")," function requests a random number within the specified ",(0,r.kt)("inlineCode",{parentName:"li"},"minVal")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"maxVal")," (inclusive)"),(0,r.kt)("li",{parentName:"ul"},"Our oracle uses the current epoch's secret seed to generate your random number"),(0,r.kt)("li",{parentName:"ul"},"Our oracle returns both the random number and the seed's one-way hash to your smart contract"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Verification")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Once the seed becomes publicly available, your random number(s) can be verified independently ",(0,r.kt)("a",{parentName:"li",href:"#option-2-on-chain-using-an-oracle-request"},"on-chain")," or ",(0,r.kt)("a",{parentName:"li",href:"#option-1-off-chain-using-our-website"},"off-chain"))))),(0,r.kt)("h2",{id:"implementation-guide"},"Implementation guide"),(0,r.kt)("h3",{id:"step-1-deploy-your-vrn-consumer-contract"},(0,r.kt)("strong",{parentName:"h3"},"Step 1"),": Deploy your VRN consumer contract"),(0,r.kt)("p",null,"Deploy your own VRN consumer contract to start requesting verifiable random numbers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Visit our ",(0,r.kt)("a",{parentName:"p",href:"/services/direct-request-jobs/Jobs-and-Pricing"},"Data Feeds")," page and navigate to your desired ",(0,r.kt)("strong",{parentName:"p"},"blockchain network")," and ",(0,r.kt)("strong",{parentName:"p"},"data type")," to find the appropriate VRN consumer contract."),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("strong",{parentName:"p"},"Example"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Testnets")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"Base Sepolia")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"uint256")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"A random number (VRN / RNG)")))),(0,r.kt)("h3",{id:"step-2-request-a-random-number"},(0,r.kt)("strong",{parentName:"h3"},"Step 2"),": Request a random number"),(0,r.kt)("p",null,"Call the ",(0,r.kt)("inlineCode",{parentName:"p"},"request()")," function within your deployed contract, with your desired range specified."),(0,r.kt)("p",null,"The oracle will respond by calling your contract's ",(0,r.kt)("inlineCode",{parentName:"p"},"fulfill()")," function with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A request ID (",(0,r.kt)("inlineCode",{parentName:"li"},"requestId"),")"),(0,r.kt)("li",{parentName:"ul"},"Random number(s) within your specified range (",(0,r.kt)("inlineCode",{parentName:"li"},"_randomNumber")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"_randomNumbers"),")"),(0,r.kt)("li",{parentName:"ul"},"The one-way hash of the secret seed used to generate your number(s) (",(0,r.kt)("inlineCode",{parentName:"li"},"hash"),")")),(0,r.kt)("h3",{id:"step-3-verify-the-random-numbers"},(0,r.kt)("strong",{parentName:"h3"},"Step 3"),": Verify the random number(s)"),(0,r.kt)("p",null,"You have two options for verifying your random number(s)."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You must wait for respective seed's epoch to end (once every 6 hours) before you can verify your random number(s).")),(0,r.kt)("h4",{id:"option-1-off-chain-using-our-website"},"Option 1 (off-chain): Using our website"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Call the ",(0,r.kt)("inlineCode",{parentName:"p"},"getHash(requestId)")," function, passing in the requestId in question")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Visit our seed verification page, entering your chain ID and hash as URL parameters:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"https://linkwellnodes.io/VRN-Seed.html?chain=ENTER_CHAIN_ID_HERE&hash=ENTER_HASH_HERE\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"chain"),": The chain ID for your respective blockchain network can be found at ",(0,r.kt)("a",{parentName:"li",href:"https://chainlist.org/"},"chainlist.org")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"hash"),": The hash obtained from the ",(0,r.kt)("inlineCode",{parentName:"li"},"getHash(requestId)")," call within your contract"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If the seed is available, it will be shown on the page")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Call ",(0,r.kt)("inlineCode",{parentName:"p"},"verifyResult(requestId, seed)")," with the requestId and the retrieved seed"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A return value of ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," confirms that the randomness was verified on-chain")))),(0,r.kt)("h4",{id:"option-2-on-chain-using-an-oracle-request"},"Option 2 (on-chain): Using an oracle request"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Ensure your contract has sufficient LINK token balance")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Call ",(0,r.kt)("inlineCode",{parentName:"p"},"requestSeedFromOracle(requestId)")," with your requestId"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This will send LINK to our oracle as payment for this transaction"),(0,r.kt)("li",{parentName:"ul"},"The required amount of LINK has been pre-specified within this function, and cannot be changed"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Wait several blocks for our oracle to call ",(0,r.kt)("inlineCode",{parentName:"p"},"fulfillSeedFromOracle()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If the seed is available, this will write the seed to your contract's storage"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Call ",(0,r.kt)("inlineCode",{parentName:"p"},"verifyResult(requestId)")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A return value of ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," confirms that the randomness was verified on-chain")))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The logic used for verifying a given random number is as follows:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"randomNumber = uint256(keccak256(abi.encodePacked(\n    seed,           // Secret seed for the related epoch\n    address(this),  // Your contract address (prevents cross-contract replay attacks)\n    requestId,      // Unique request ID (prevents replay attacks within your contract)\n    index           // The 0-indexed index of the requested number (0 for requests for a single number)\n))) % (maxVal - minVal + 1) + minVal;   // The requested lower and upper bounds of the random number(s) (inclusive)\n"))),(0,r.kt)("h2",{id:"security"},"Security"),(0,r.kt)("p",null,"Our VRN service employs multiple security measures:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Seeds are generated using secure cryptographic hashing algorithms"),(0,r.kt)("li",{parentName:"ul"},"Seeds are encrypted and stored on our secure, ",(0,r.kt)("a",{parentName:"li",href:"/services/direct-request-jobs/Service-Level-Agreement#data-security"},"SOC-2 compliant infrastructure")," until their reveal time"),(0,r.kt)("li",{parentName:"ul"},"Seeds are rotated every 6 hours to prevent manipulation"),(0,r.kt)("li",{parentName:"ul"},"All random number generation follows a deterministic and verifiable process"),(0,r.kt)("li",{parentName:"ul"},"All operations are verifiable on-chain")),(0,r.kt)("h2",{id:"need-more-help"},"Need more help?"),(0,r.kt)("p",null,"Join our ",(0,r.kt)("a",{parentName:"p",href:"https://discord.com/invite/Xs6SjqVPUA"},"Discord")," server for immediate assistance!"))}p.isMDXComponent=!0},2821:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/rng-dice-b7d5072b72768e7798d2425c9395b123.webp"}}]);