"use strict";(self.webpackChunklinkwell_nodes_documentation=self.webpackChunklinkwell_nodes_documentation||[]).push([[2350],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),h=i,k=u["".concat(c,".").concat(h)]||u[h]||p[h]||a;return n?r.createElement(k,o(o({ref:t},d),{},{components:n})):r.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=h;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2658:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={title:"Chainlink\u2019s Basic Request Model: Chainlink Oracle Architectures Explained",description:"Exploring Chainlink's Basic Request Model: How Web3 developers can utilize oracle networks for retrieving real-world data into their applications.",date:"2024-02-17",keywords:["chainlink","smart contracts","decentralized oracles","web3","blockchain","node operator"],authors:["Ken"],tags:["chainlink","smart contracts","decentralized oracles","web3","blockchain","node operator"]},o=void 0,l={permalink:"/blog/Chainlink-Basic-Request-Model-Architectures",source:"@site/blog/Chainlink-Basic-Request-Model-Architectures/index.md",title:"Chainlink\u2019s Basic Request Model: Chainlink Oracle Architectures Explained",description:"Exploring Chainlink's Basic Request Model: How Web3 developers can utilize oracle networks for retrieving real-world data into their applications.",date:"2024-02-17T00:00:00.000Z",formattedDate:"February 17, 2024",tags:[{label:"chainlink",permalink:"/blog/tags/chainlink"},{label:"smart contracts",permalink:"/blog/tags/smart-contracts"},{label:"decentralized oracles",permalink:"/blog/tags/decentralized-oracles"},{label:"web3",permalink:"/blog/tags/web-3"},{label:"blockchain",permalink:"/blog/tags/blockchain"},{label:"node operator",permalink:"/blog/tags/node-operator"}],readingTime:11.685,hasTruncateMarker:!0,authors:[{name:"Ken Reiners",title:"Co-Founder LinkWell Nodes",url:"https://www.linkedin.com/in/ken-reiners-755806167/",imageURL:"/img/ken-reiners-100x100.webp",key:"Ken"}],frontMatter:{title:"Chainlink\u2019s Basic Request Model: Chainlink Oracle Architectures Explained",description:"Exploring Chainlink's Basic Request Model: How Web3 developers can utilize oracle networks for retrieving real-world data into their applications.",date:"2024-02-17",keywords:["chainlink","smart contracts","decentralized oracles","web3","blockchain","node operator"],authors:["Ken"],tags:["chainlink","smart contracts","decentralized oracles","web3","blockchain","node operator"]},prevItem:{title:"Chainlink Price Feeds: Connect your Web3 App to a Custom Flux Monitor DON",permalink:"/blog/Build-A-Chainlink-Price-Feed-With-Flux-Aggregator"},nextItem:{title:"How To Request a Custom Any API Chainlink Data Feed: A 7 Step Guide For Web3 Developers",permalink:"/blog/Requesting-A-Custom-Chainlink-Data-Feed-Using-Any-API"}},c={authorsImageUrls:[void 0]},s=[{value:"Chainlink\u2019s Basic (Direct) Request Model: Chainlink Oracle Architectures Explained",id:"chainlinks-basic-direct-request-model-chainlink-oracle-architectures-explained",level:2},{value:"<strong>Introduction</strong>",id:"introduction",level:2}],d={toc:s},u="wrapper";function p(e){let{components:t,...a}=e;return(0,i.kt)(u,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"chainlinks-basic-direct-request-model-chainlink-oracle-architectures-explained"},"Chainlink\u2019s Basic (Direct) Request Model: Chainlink Oracle Architectures Explained"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Chainlink Basic Request Model Architecture Header",src:n(3395).Z,title:"Chainlink Basic Request Model Architectures",width:"800",height:"600"})),(0,i.kt)("h2",{id:"introduction"},(0,i.kt)("strong",{parentName:"h2"},"Introduction")),(0,i.kt)("p",null,"Chainlink\u2019s basic request model \u2014 previously known as the \u201cdirect request model\u201d \u2014 is a bit of a misnomer."),(0,i.kt)("p",null,"While this model can indeed be viewed as the \u201cbasic\u201d building block of Chainlink oracle requests \u2014 especially in comparison to some of its more recent counterparts such as Functions, Off-Chain Reporting (OCR), and the Cross-Chain Interoperability Protocol (CCIP) \u2014 the Basic Request Model supports a number of different deployment architectures that allow it to connect your smart contract to virtually anywhere on the internet."),(0,i.kt)("p",null,"In this article, we\u2019ll unravel the intricacies of Chainlink\u2019s basic request model, shedding light on the various architectures / design patterns that Web3 developers can implement to incorporate reliable, real-world data into their decentralized applications."))}p.isMDXComponent=!0},3395:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/Header-8a8f12d8b195786445e06847c058bc25.webp"}}]);