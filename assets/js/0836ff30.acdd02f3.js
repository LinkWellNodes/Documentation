"use strict";(self.webpackChunklinkwell_nodes_documentation=self.webpackChunklinkwell_nodes_documentation||[]).push([[2350],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=s(n),k=a,h=p["".concat(c,".").concat(k)]||p[k]||u[k]||i;return n?r.createElement(h,l(l({ref:t},d),{},{components:n})):r.createElement(h,l({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=k;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},2658:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={title:"Chainlink Any API: Building a Custom Oracle Network",description:"Exploring Chainlink's Basic Request Model: How Web3 developers can design Chainlink oracle networks for reliable real-world data in their apps.",date:"2024-02-17",keywords:["chainlink","smart contracts","decentralized oracles","web3","blockchain","node operator"],authors:["Ken"],tags:["chainlink","smart contracts","decentralized oracles","web3","blockchain","node operator"]},l=void 0,o={permalink:"/blog/Chainlink-Basic-Request-Model-Architectures",source:"@site/blog/Chainlink-Basic-Request-Model-Architectures/index.md",title:"Chainlink Any API: Building a Custom Oracle Network",description:"Exploring Chainlink's Basic Request Model: How Web3 developers can design Chainlink oracle networks for reliable real-world data in their apps.",date:"2024-02-17T00:00:00.000Z",formattedDate:"February 17, 2024",tags:[{label:"chainlink",permalink:"/blog/tags/chainlink"},{label:"smart contracts",permalink:"/blog/tags/smart-contracts"},{label:"decentralized oracles",permalink:"/blog/tags/decentralized-oracles"},{label:"web3",permalink:"/blog/tags/web-3"},{label:"blockchain",permalink:"/blog/tags/blockchain"},{label:"node operator",permalink:"/blog/tags/node-operator"}],readingTime:11.675,hasTruncateMarker:!0,authors:[{name:"Ken Reiners",title:"Co-Founder LinkWell Nodes",url:"https://www.linkedin.com/in/ken-reiners-755806167/",imageURL:"/img/ken-reiners-100x100.webp",key:"Ken"}],frontMatter:{title:"Chainlink Any API: Building a Custom Oracle Network",description:"Exploring Chainlink's Basic Request Model: How Web3 developers can design Chainlink oracle networks for reliable real-world data in their apps.",date:"2024-02-17",keywords:["chainlink","smart contracts","decentralized oracles","web3","blockchain","node operator"],authors:["Ken"],tags:["chainlink","smart contracts","decentralized oracles","web3","blockchain","node operator"]},prevItem:{title:"Chainlink Price Feeds: Connect your Web3 App to a Custom Flux Monitor DON",permalink:"/blog/Build-A-Chainlink-Price-Feed-With-Flux-Aggregator"},nextItem:{title:"How To Request a Custom Any API Chainlink Data Feed: A 7 Step Guide For Web3 Developers",permalink:"/blog/Requesting-A-Custom-Chainlink-Data-Feed-Using-Any-API"}},c={authorsImageUrls:[void 0]},s=[{value:"Chainlink&#39;s Basic (Direct) Request Model: Chainlink Oracle Architectures Explained",id:"chainlinks-basic-direct-request-model-chainlink-oracle-architectures-explained",level:2}],d={toc:s},p="wrapper";function u(e){let{components:t,...i}=e;return(0,a.kt)(p,(0,r.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"chainlinks-basic-direct-request-model-chainlink-oracle-architectures-explained"},"Chainlink's Basic (Direct) Request Model: Chainlink Oracle Architectures Explained"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Chainlink Basic Request Model Architecture Header",src:n(3395).Z,title:"Chainlink Basic Request Model Architectures",width:"800",height:"600"})))}u.isMDXComponent=!0},3395:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/Header-8a8f12d8b195786445e06847c058bc25.webp"}}]);