type = "directrequest"
schemaVersion = 1
name = "LW_EGT_DR_Post_Uint256"
externalJobID = "b090204b-1664-4030-844a-6e91932a7626"
forwardingAllowed = false
maxTaskDuration = "0s"
contractAddress = "0xB9C47B9609174716CE536324d4FbEad9292c1d3a"
minContractPaymentLinkJuels = "0"
observationSource = """
    decode_log   [type="ethabidecodelog"
                  abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                  data="$(jobRun.logData)"
                  topics="$(jobRun.logTopics)"]

    decode_cbor  [type="cborparse" data="$(decode_log.data)"]
    post        [
\t    \t\t\ttype="http" 
\t                method=POST
\t                url="$(decode_cbor.post)" 
\t                # Permits the task to access a URL at localhost, which could present a security risk. Note that Bridge tasks allow this by default.
\t                allowUnrestrictedNetworkAccess="true" 
\t                # (optional) REQUEST HEADERS | these headers must be hardcoded below, and cannot be added dynamically (ie, decode_cbor.var), as var injection is not supported for this field
\t                # headers="[
\t                #\t\\"HeaderNm1\\", \\"HeaderVal1\\", 
\t                #\t\\"HeaderNm2\\", \\"HeaderVal2\\",
\t                #\t\\"HeaderNm3\\", \\"HeaderVal3\\"
\t            \t#]"  
\t            \t# (OPTIONAL) REQUEST BODY | if included, the value must not be a blank string (''), and must be at a minimum sent over from the consumer contract as '{}'.
\t                requestData="$(decode_cbor.requestData)"
                ]
    parse        [type="jsonparse" path="$(decode_cbor.path)" data="$(post)"]
    multiply     [type="multiply" input="$(parse)" times="$(decode_cbor.times)"]
    encode_large [type="ethabiencode"
                abi="(bytes32 requestId, uint256 _data)"
                data="{\\"requestId\\": $(decode_log.requestId), \\"_data\\": $(multiply)}"
                ]
    encode_tx  [type="ethabiencode"
                abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\":   $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_large)}"
                ]

    submit_tx    [type="ethtx" to="0xB9C47B9609174716CE536324d4FbEad9292c1d3a" data="$(encode_tx)"]

    decode_log -> decode_cbor -> post -> parse -> encode_large -> encode_tx -> submit_tx
"""