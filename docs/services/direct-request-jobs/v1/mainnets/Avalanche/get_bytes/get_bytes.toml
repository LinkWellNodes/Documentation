type = "directrequest"
schemaVersion = 1
name = "LW_ACM_DR_Get_Bytes"
externalJobID = "5b48fe6a-c244-436b-b5ad-689ab64ef28b"
forwardingAllowed = false
maxTaskDuration = "0s"
contractAddress = "0x720E94621237EE80948E1C14Cf62bb82ceb8b264"
minContractPaymentLinkJuels = "150000000000000000"
observationSource = """

    decode_log  [
                type="ethabidecodelog"
                abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                data="$(jobRun.logData)"
                topics="$(jobRun.logTopics)"
                ]

    decode_cbor [
                type="cborparse"
                data="$(decode_log.data)"
                ]
    fetch        [type="http" method=GET url="$(decode_cbor.get)" allowunrestrictednetworkaccess="false"]
    parse       [
                type="jsonparse"
                path="$(decode_cbor.path)"
                data="$(fetch)"
                ]
    encode_large [type="ethabiencode"
                abi="(bytes32 requestId, bytes _data)"
                data="{\\"requestId\\": $(decode_log.requestId), \\"_data\\": $(parse)}"
                ]
    encode_tx   [
                type="ethabiencode"
                abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\":   $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_large)}"
                ]

    submit_tx   [
                type="ethtx"
                to="0x720E94621237EE80948E1C14Cf62bb82ceb8b264"
                data="$(encode_tx)"
                gasLimit="500000"
                ]

    decode_log -> decode_cbor -> fetch -> parse  -> encode_large -> encode_tx -> submit_tx
"""