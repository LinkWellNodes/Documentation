type = "directrequest"
schemaVersion = 1
name = "LW_ACFT_EA_bytes32_vrn-get-seed"
externalJobID = "ac792c55-3fee-451e-8780-0a9c44a3abed"
forwardingAllowed = false
maxTaskDuration = "0s"
contractAddress = "0xd0EbC86a4f67654B654Feb0e615d7f5C139a6406"
evmChainID = "43113"
minIncomingConfirmations = 1
minContractPaymentLinkJuels = "0"
observationSource = """

    decode_log  [
                type="ethabidecodelog"
                abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                data="$(jobRun.logData)"
                topics="$(jobRun.logTopics)"
                ]

    decode_cbor [
                type="cborparse"
                data="$(decode_log.data)"
                ]

    send_to_bridge [
                type="bridge" 
                name="common-http-forwarder" 
                requestData="{\\"contact-id\\":\\"\\",\\"requesttype\\":\\"GETVRNSEED\\",\\"hash\\":$(decode_cbor.hash),\\"jobname\\":$(jobSpec.name),\\"txnhash\\":$(jobRun.logTxHash),\\"externaljobid\\":$(jobSpec.externalJobID),\\"oracleaddress\\":$(jobRun.logAddress)}" 
                headers=""
                ]

    encode_data [
                type="ethabiencode" 
                abi="(bytes32 requestId, bytes32 hash, bytes32 seed)" 
                data="{ \\"requestId\\": $(decode_log.requestId), \\"hash\\": $(decode_cbor.hash), \\"seed\\": $(send_to_bridge) }"
                ]

    encode_tx   [
                type="ethabiencode"
                abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"
                ]

    encode_gas_guardian_data   [
                type="ethabiencode"
                abi="fulfillSeedFromOracle(bytes32 requestId, bytes32 hash, bytes32 seed)" 
                data="{\\"requestId\\": $(decode_log.requestId), \\"hash\\": $(decode_cbor.hash), \\"seed\\": $(send_to_bridge) }"
                ]

    gas_guardian [
                type="bridge" 
                name="gas-guardian" 
                requestData="{\\"contact-id\\":\\"\\",\\"data\\":$(encode_gas_guardian_data),\\"jobname\\":$(jobSpec.name),\\"txnhash\\":$(jobRun.logTxHash),\\"externaljobid\\":$(jobSpec.externalJobID),\\"oracleaddress\\":$(jobRun.logAddress),\\"responseobj\\":$(send_to_bridge)}" 
                headers="[\\"disable\\", \\"false\\", \\"gas-limit\\", \\"500000\\", \\"max-loss-usd\\", \\"0\\", \\"max-loss-pct\\", \\"0\\"]"
                ]

    submit_tx   [
                type="ethtx"
                to="0xd0EbC86a4f67654B654Feb0e615d7f5C139a6406"
                data="$(encode_tx)"
                gasLimit="500000"
                ]

    decode_log -> decode_cbor -> send_to_bridge

    send_to_bridge -> encode_data -> encode_tx
    send_to_bridge -> encode_gas_guardian_data -> gas_guardian

    encode_tx -> submit_tx
    gas_guardian -> submit_tx
"""
